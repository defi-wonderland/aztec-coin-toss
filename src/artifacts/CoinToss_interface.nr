/* Autogenerated file, do not edit! */
  
use dep::std;
use dep::aztec::context::{ PrivateContext, PublicContext };
use dep::protocol_types::constants::RETURN_VALUES_LENGTH;



// Interface for calling CoinToss functions from a private context
struct CoinTossPrivateContextInterface {
  address: Field,
}

impl CoinTossPrivateContextInterface {
  pub fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
  pub fn create_bet(
    self,
    context: &mut PrivateContext,
    bet: bool,
    userTransferNonce: Field,
    houseEscrowRandomness: Field,
    houseSettleEscrowNonce: Field,
    user_question: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 5];
    serialized_args[0] = bet as Field;
    serialized_args[1] = userTransferNonce;
    serialized_args[2] = houseEscrowRandomness;
    serialized_args[3] = houseSettleEscrowNonce;
    serialized_args[4] = user_question;

    context.call_private_function(self.address, 0x29165130, serialized_args)
  }
  

  pub fn oracle_callback(
    self,
    context: &mut PrivateContext,
    answer: Field,
    data: [Field;5]
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 6];
    serialized_args[0] = answer;
    serialized_args[1] = data[0];
    serialized_args[2] = data[1];
    serialized_args[3] = data[2];
    serialized_args[4] = data[3];
    serialized_args[5] = data[4];

    context.call_private_function(self.address, 0x8853c9d8, serialized_args)
  }
  

  pub fn settle_bet(
    self,
    context: &mut PrivateContext,
    bet_id: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 1];
    serialized_args[0] = bet_id;

    context.call_private_function(self.address, 0xd5c9771f, serialized_args)
  }
  
}
  
  


// Interface for calling CoinToss functions from a public context
struct CoinTossPublicContextInterface {
  address: Field,
}

impl CoinTossPublicContextInterface {
  pub fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
}
  
  
